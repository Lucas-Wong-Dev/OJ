// 特殊的数字
// AC
/*
问题描述
153是一个非常特殊的数，它等于它的每位数字的立方和，即153=1*1*1+5*5*5+3*3*3。编程求所有满足这种条件的三位十进制数。

输出格式
按从小到大的顺序输出满足条件的三位十进制数，每个数占一行。
*/
#include <stdio.h> // AC
int main()
{
    int a, b, c;
    for (int i = 100; i <= 999; i++)
    {
        a = i / 100;
        b = i / 10 % 10;
        c = i % 10;
        if (a * a * a + b * b * b + c * c * c == i)
            printf("%d%d%d\n", a, b, c);
    }
    return 0;
}

// #include <iostream> // AC
// using namespace std;
// int main()
// {
//     for (int i = 1; i <= 9; i++)
//     {
//         for (int j = 0; j <= 9; j++)
//         {
//             for (int k = 0; k <= 9; k++)
//             {
//                 if ((i * i * i + j * j * j + k * k * k) == (i * 100 + j * 10 + k))
//                     cout << i << j << k << endl;
//                 // 输出格式：按从小到大的顺序输出满足条件的三位十进制数，每个数占一行。
//                 // 可见，输出每个三位十进制数时，可以依次输出这个三位十进制数的每一位，而不必“单独声明一个int型变量并让这个变量从左到右每一位上的数分别为i、j、k，然后输出这个int型变量”
//             }
//         }
//     }
//     return 0;
// }
